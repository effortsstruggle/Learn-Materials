一、重载运算符
	重载运算符（标志：operator）：本质是重载函数（C语言中的函数）也可以是成员方法
			
		1.运算符可以直接识别基本类型数据（运算符只能对基本类型数据进行运算，不能对复杂类型直接识别运算）
		2.重载运算符:用来计算复杂类型
		
	 注意：
		1、重载运算符函数可以返回任意类型，但是返回的类型与运算符保持一致
			eg: ==  bool    重载运算 Operator== 的结果也应该是bool
		2、结合性不能改变
		3、隐式类型转换不变
		4、如下运算符不能重载：
			.    &   >>     *（成员指针访问运算符）
			
		PS:不是所有运算符都可以用成员方法（如：<<）  
		
		   也不是所有运算符都可以用函数
	
二、相等运算==
		1、定义成员方法
			bool operator==(类名&)
		2、定义全局方法
			
			
三、重载输出(全局函数，因为cout是系统输出类,已经被封装好的类):
	ostream& operator<<(ostream& out,类名& m);			
	{
			//错误:out<<m;//ostream& operator<<(out,m);//死递归
	}

cout是系统输出类，类名:ostream   


String类：

string：C++将字符串常用的功能封装成为类。C++常用字符串的各种操作	
		


练习题1：
1、模似string类实现mystring类
	class mystring
	{
	private:
		char* str;//指向堆区
	};
	1、完成构造器
	2、是否需要完成深拷贝？若需要，如何完成
	3、完成operator重载（模仿）
	4、完成
		mystring s2;
		s2="abc";
	   大家利用基础知识，这个地方是在简单赋值？还是会调用重载=运算符？如何完成？
	5、重载输出

2、完成成绩管理系统：
	class people
	{
	protected:
		int id;
		char name[10];
		char sex;
		float score;
	};	

	1.定义一个数组
		people s[5];
	2.完成给上面对象成员赋值
	3.完成重载==  >  <  !=方法，实现对成绩比较
		if(s[1]==s[2])//比较成绩 
		{
		}	

	4、输出s[1]的所有信息
		cout<<s[1]<<endl;











			