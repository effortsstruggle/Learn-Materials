C++三大特点：封装、继承、多态
PS：对象中，所有不指明方式的 都默认为 私有方式


一、继承：C++允许保护原有的特性的基础上进行拓展    
		基类（父类）：
		派生类（子类）：从基类中派生出来的类
	
	继承方式：公有继承  私有继承  保护继承

	派生类: 继承方式 基类	
	{
	
	};

	PS:继承方式:public protected private;

eg:
	派生类:继承方式 基类
	{
		
	};
PS:派生时，不会选择性继承，将父类完全拷贝一次。
   若派生时，不指明继承方式，默认有私有继承。
	
	
二、继承方式：
		公有封装  类内/外均可访问
		保护封装  类外不可访问，类内可以访问
		私有封装  类外不可访问，类内可以访问
	
	继承方式：（成员 最好使用 保护封装）
					公有继承	保护继承    私有继承    
	基类公有成员	公有		保护		私有
	基类保护成员	保护		保护		私有
	基类私有成员	不可访问	不可访问	不可访问
	
PS: 1.派生类中无法直接访问基类的私有成员，但可间接访间接访问（父类中提供非私有方法）	
	
	2.构造器只能构造自身空间的成员
	构造器：派生类不仅要构造自身（子类）中增加的成员，
			还需要去间接构造继承的成员（由父类的构造器来完成）。
		
	class people
	{
		...
	};
	
	class student:public people
	{
		//1.若子类的构造器不显示的调用父类构造器时，默认调用父类的无参构造器
		student();//等价于student():people()
	};
	注意：子类中继承的基类部分，必须指明构造器中的  初始化列表 来调用父类构造器来构造继承过来的基类部分	
	
	
~析构器:当子类构造释放时,自动调用子类的析构器和父类的析构器	


总结：
	1、先构造父类，再构造子类（默认调用无参构造器）
	2、先析构子类，再析构父类
	
	先构造后析构，后构造先析构
	


重定义(隐藏,覆盖)：
重写(改变)：子类重写父类方法	
	
	
	
	
练习题：
		1、复习今天下午的继承（视频）
		2、类对象作为成员属性
		3、默写mystring
		4、练习题：
//容器类	
class array
{
public:
	array();
	...
proctected:
	int buf[100];
	int ilen;
};		


int main()
{
	int buf[]={1,2,3,4,5};
	array a(buf,5);
	array a1;
	array a2(a);
	
	//插入到末尾
	a1.push_back(100);
	a1.front();//返回第一个元素
	a1.insert(5,100);
	a1.at(1);//返回下标为1的内容
	a1[1];//重载运算符
	a1.pop_back(); //移除最后一个元素
	a1.empty();//判断是否为空
	
}


//在容器类适配出一个类叫：栈类
class stack:? array
{
...
//方法
	void push();
	void pop();
	void top();
	bool empty();
	bool full();
};


		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
		