继承：
	1、基类：父类
	2、派生类：子类
封装方式：
		公有封装    私有封装  保护封装
		
继承方式：公有继承    私有继承  	保护继承
					
基类公有	公有	   私有 		保护	
基类保护 	保护	   私有			保护 
基类私有   不可访问    不可访问 	 不可访问

PS:基类为子类提供公有方法


定义类：
	class 派生类:基类
	{
		
	};
		
构造器：构造器构造子类成员时（新增，基类（调用基类构造器）：默认调用基类无参构造器，需指定构造器）
	构造器(...):基类(...)
	{
		
	}


一、父子类：(重定义（隐藏,函数没有virtual修饰），重写（virtual修饰）)
父子类对象相互赋值：
	基类对象=子类对象  可以
	
		Ps: 1.引用时只能引用 子类中 基类的部分  
				原因:子类对象赋值给父类对象，仅仅把继承自父类部分成员函数赋值给父类对象
		
	子类对象=基类对象  错误：是不能赋值的
		
父子类指针相互指向：
	基类指针变量=基类指针		  
	基类指针变量=子类指针;  
	
		引用时只能引用 子类中 基类的部分
		
	子类指针变量=基类指针  error:语法报错
		
		
二、虚函数（作用:
			1.当父类指针指向子类时，默认调用函数是父类的，
			2.用父类指针调用子类中的函数时，就需要将父类中的函数声明成虚函数,子类中重写在函数时，也是虚函数
			
		在派生类中重新定义基类中定义的虚函数时，会告诉编译器不要静态链接到该函数。
		我们想要的是在程序中任意点可以根据所调用的对象类型来选择调用的函数，这种操作被称为动态链接，或后期绑定。
		）
		
		virtual 返回值类型  函数名(形参列表)	
		{
		
		}
		
三、虚继承：解决公共基类问题（多继承中）
	class 派生类:virtual public 基类
	{
	
	};
	
	作用：防止多继承中的特例（菱形的继承关系）问题（浪费空间，存在二义性）

		PS:虚继承的目的是让某个类做出声明，承诺愿意共享它的基类。
		
		   其中，这个被共享的基类就称为虚基类(公共类)（Virtual Base Class）	
	  
PS
	1.有虚函数的类就是虚基类
	
	2.一个类中全是纯虚函数称为（全虚基类）也就是java的接口时
		
四、虚函数表：
	pfunction pfun ;
	 pfun = (pfunction)*((int*)*(int*)(&zq)+1);
	 

		Ps:
		单继承:
		//覆盖：
			1.子类会拷贝一份父类的虚函数表
			
			1.虚函数按照其声明顺序存放在虚函数表中
			   父类的虚函数在子类的虚函数前面。
			   
			2、重写父类的虚函数(父类的虚函数被覆盖)

			3、任何有虚函数的类，相比没有虚函数的类  多出4个字节，这4个字节存放的就是虚函数表的地址,位于对象存储空间的最前端
			   
			
				最后一个位置，是虚函数表结束的标志:就像字符串的结束符“/0”一样，其标志了虚函数表的结束。
			   这个结束标志的值在不同的编译器下是不同的。在WinXP+VS2003下，这个值是NULL。
			   而在Ubuntu 7.10 +Linux 2.6.22 + GCC 4.1.3下，这个值是如果1，
			   表示还有下一个虚函数表，如果值是0，表示是最后一个虚函数表。
					
		多继承:
			1.每个父类都有自己的虚表。有几个表子类就拷贝几个
			

			2.子类的成员函数被放到了第一个父类的表中。（所谓的第一个父类是按照声明顺序来判断的）
			
				
五、多态：方法或属性（成员）多种形态，
		多态关键:通过基类指针调用函数
	
	1、静态多态：在编译时就已经确定了调用的方法或函数
		重载：同名不同参
	
		

	2、动态多态（三个条件）：继承  虚函数  基类指针指向子类
		
	Ps: 1.多态建立在  继承关系 的基础上
		2.C++ 多态意味着调用成员函数时，会根据调用函数的对象的类型来执行不同的函数。
要求：
	1、将今日的基础知识点弄懂
	2、函数指针
	   typedef 
	   （内存布局不用看）
	3、练习题：
		题目1、
			编写一个程序，定义基类Shape，由它派生出5个派生类： Circle(圆形)、Square(正方形)、Rectangle(矩形)、Trapezoid(梯形)、Triangle(三角形)。
			1、用虚函数分别计算几种图形面积（方法名：area），并求它们之和。
			2、要求用基类指针数组，使它每一个元素指向一个派生类对象。 
		题目2、		
			使用虚函数编写程序求球体和圆柱体的体积及表面积。由于球体和圆柱体都可以看作由圆继承而来，
			所以可以定义圆类Circle作为基类。在Circle类中定义一个数据成员radius和两个虚函数area()和volume()。
			由Circle类派生Sphere类和Column类。在派生类中对虚函数area()和volume()重新定义，分别求球体和圆柱体的体积及表面积。			