形参：作用于实参与形参之间的值传递

固定形参：
int add(int a,int b)
{
	reutrn a+b;
}

int main()
{
	//c++调用函数：不仅函数名匹配，还需要匹配实参与形参的匹配
	add(1,2,3);
}

可变形参：
	printf("%d",1);
	printf("%d %d",1,2);
	printf("%d %d %d",1,2,3);
	总结:printf是一个可变形参
	
定义可变形参函数（C语言中也有）
	需导入（include<stdarg.h>）
	返回类型 函数名(显示类型,...)
	{
		//从参数列表(类似于一个数组)中取值
		//1、初始化va_list这个类型（自定义） 将va_list指向实参列表
		//void va_start(va_list ap, last);   last：结束的位置 ，参数的个数
		//2循环获取实参
		type va_arg(va_list ap, type);
		//3释放
		 void va_end(va_list ap);
	}
	PS:显示类型的作用是:一般用于显示传递的参数的个数和类型
	
	
练习题1：
		1、求任意整数之和
		2、求任意整数中最大值，最小值


数据：（学好指针，下列三句话必须掌握）
	1、定义变量：分配空间
	
	2、初始化：定义同时赋值
	
	3、引用：引用空间的内容
			1、通过变量名来引用：引用变量内容的内容
			2、别名
			3.指针(*地址)：引用地址内容  
			
			
			
			

整型变量：只能存储整型的值
	定义：	int a; 
		
数组：
	定义数组：是一块连续且同类型的空间
		类型  数组名[长度]
		int buf[20];
	数组名：是此块空间的首地址
	
		*（buf+1） 等价于 buf[1]  :下标法等价于指针法  引用地址内容

		
指针：就是地址（地址：物理内存上连续编号）

	（内存条上为什么需要地址？）
	
	
	
指针变量：
	
	定义：只能存储指针（地址）（*只能运用与指针）

			指针----》分配空间（地址）       
			
			

指针类型（类型*）

	1.定义指针变量：
		类型* a;	//在定义变量中，加了*,此*作为指针变量的标识
		
		  

		int* p=1;
		p---->引用p的  自身空间  内容
		
	   *p----》引用p指向的  空间  内容 （指向的空间（地址）必须存在（分配））
		
		如果该地址空间没有分配则无法使用（int* p=0  --》0的地址空间并没有被分配）
			

		
	2.初始化指针变量:定义指针变量同时赋初值   
		类型* a=地址; 
		 int* a=&b;
			
			Ps：
				指针中不初始化，为野指针(指向随意的地址)

	3.引用指针变量：
	
		通过变量名来引用
		
		
		
		cout<<"*0x8049a78="<<*(int*)0x8049ac4<<endl;//一个十六进制的数强转成一个地址
		
	
	
	Ps:引用地址时，该空间必须被分配给用户  --》  该空间必须有值
	
	

	
	取别人东西      取自己东西
	
	
指针运算：


		1.* 指针(&a)   引用该指针  指向的空间  内容
		
		
	
		2.* 指针变量      引用指针地址的长度   是该类型决定
			sizeof(类型)Byte空间	
		
			char* pa=&a;  *pa  引用pa指向的1Byte空间	

			short* pa=&a;  *pa  引用pa指向的2Byte空间		

			类型* pa=&a;  *pa  引用pa指向的sizeof(类型)Byte空间	
			
			强转：
				int* pa=&a;
				char* b=(char*)pa;
		
		3.赋值：
				
	

	
		
指针和数组结合：（为了和数组结合）

		指针 +/-  n：从指针开始（+）向右 / (-)向左移动到 n个元素后  空间地址
		
			指针+n*sizeof(类型)  
		
		short  :  每次移动2个byte（short。。+1*2byte）：
		char   ： 每次移动1个byte
		
		
		
		指针-指针  指针+指针
		
		地址-地址  等于两个地址之间元素的个数





运算符：
	1、引用：取别名   
		int& syg=a;
		
	2、引用地址的内容：   *地址
	
	3、取地址:取该变量空间的地址
		int a;//定义变量，分配空间
		&a
		


	PS：
		优先级：
			[]>&>*>算术（先乘除，后加减）>逻辑
			[]>.>* 
		    -> > &	
		



1、int a=67305985;
   将a中的每1Byte元素出来
   
2、求a中每1Byte值之和

3、int a=69325295;
   求a中那一个字节最大值










	
	
	