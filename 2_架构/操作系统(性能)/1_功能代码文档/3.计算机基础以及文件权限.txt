Linux特点：
	1多任务多用户

查看文件的属性：
	ls -l 文件
    ll  文件

	-【rw-】【rw-】【r--】 1 LF LF 74  7月  1 09:30 lf.txt
	第一位：文件的类型
			-  普通文件
			d  文件夹
			s  网络文件
			l  链接 
			B  块
			c  字符设备(电子相册)
			
文件的权限：文件对于用户的一种操作许可
	1、文件对于用户的分类：创建者U  群组G   其他人O  所有用户all
	2、权限：读r 写w  执行x
		
	3、文件的权限
		[创建者][群组][其他人]
		
	4、修改权限：
		chmod  用户+/-权限1，用户+/-权限2  文件
		chmod 0777  文件
		 401  001  421
		[r-x][--x][rwx]	
		  5    1	7
		
	5、文件的掩码：用于屏蔽创建文件的权限位
			1、查看文件的掩码
				umask  
				
			PS:权限666-掩码===创建文件的权限
			  的权限777-掩码==创建文件夹的权限	

语言的发展历史：
	1、机器语言：二进制(1111)
		缺点：很难识别   优点：机器容易识别
	2、汇编语言：用特定的符号来替代二进制
		翻译器：将汇编翻译成为二进制
	3、高级语言:自然语言
		C,C++,JAVA,C#，OC,PYTHON,PHP,易语言。。。。
		翻译器：将高级语言翻译成为指令
		
//stdio.h就是一个文件,include就是将此文件导入进来。这个导入过程就是由编译器完成。		
#include<stdio.h>

void main()
{	
	printf("hello world\n");
}
		
	
gcc编译器：将源文件翻译成为目标指令并链接成为一个可执行文件
	1、gcc 源文件  
		PS:生成一个可执行文件 a.out
	   gcc  源文件  -o 目标文件
	2、	编译过程：
		1.预处理
			gcc -E  源文件  -o 文件.i
		
		2.汇编：
			gcc -S 源文件   -o  文件.s
		3编译：转换二进制文件  （）
			gcc -c 源文件  -o 目标文件.o
		4链接：将目标文件和库文件打包在一起，成为一个可执行文件
			gcc 目标文件 -l库文件  -o 目标文件
			  
	
	
	
计算机基础：
	1、存储单位：
		最小存储单位：bit 存储0或者1的空间			最小钱的单元：分
		基本存储单位：byte 							钱的基本单  ：元		
				1Byte=8bit								1元=100分=10角
		其他单位：
			1KB=2^10Byte=1024Byte
			1MB=2^10^KB=1024KB
			GB=1024MB
			TB=1024GB
		注：1KB=1000Byte	  
			
	
	2、数制位：
		二进制：每一位由0-1组成，满2进1   权为2
		十进制：每一位0-9组成，满10进1    权为10
		八进制：每一位由0-7组成，满8进1   权为8
		十六进制：0-f组成，满16进1        权为16
		
		转换：
				满：（从右往左计算）   位值*权^n...+位值*权^1+位值*权^0
			二进制----》十进制：
				1010 --->10(十进制)
			八进制----》十进制
				0100---》64
			十六进制----》十进制	
				0x100---》256
				
			十进制--》二进制  （除2取余法,拼凑法） 32 16 8 4 2 1
													   1 1 1 1 1 
				12---> 1100 
			八进制---》二进制    每3个二进制位代表一个8进制位
				027-->(十进制)23---》010 111         
			十六进制---》二进制
				0x1f  --》(十进制)31----》0001 1111  
			
				
		3整型的存储：
			1、正整型：以原码存放
			2、负数：以补码存放
			3、原码：二进制
					1    0 001
                    -1   1 001
				反码：符号位是不变，数值位取反
					-1	 1 110 
				补码:反码+1
					-1  1 111
					
			  PS:如果是该数字为负数时 ,  取出时必须转换为源码
					
创建精灵进程：
		...
		设置文件掩码umsk(066);
		...
		
C语言：只是一门语言，面向过程（函数）
	目标：编写程序
	程序=数据+算法
数据：
   分类：
    1、是否可变
		1、常量：
		2、变量：
	2、类型：
		整型:
		浮点型:
		字符型：
	3、整型：
		整型常量(字面型常量)：
			十进制：  100
		
		整型变量： 短整型short2Byte  基本整型int4Byte  长整型long 4Byte
			1、定义变量:分配空间
				类型 a;
				[signed/unsinged] short a;               
				PS:1、定义变量是不允许同名定义（错误）
				   2、不去添加[signed/unsinged],默认为有符号
					short a ==  signed short a;
					
					3、unsigned  和 signed 比较： 两个数 比较，是转换成 unsigned比较     ，向高精度转换
						10            -10		
						10             补码:42.......
					
				有符号：
					 [] [][][][][][][][] [][][][][][][][][]
					符号位	   数值位
					 1  -	最小：   0 000000000000000   -32768     +0    
					 0  +   最大值： 0 111111111111111	 32767
				无符号：
					[][][][][][][][][] [][][][][][][][][]	
					最小值：00000000 00000000    0
					最大值：11111111 11111111    65535
			2、初始化：在定义变量的同时赋值  （不符值，代表野指针）
				short a=10;
				
				PS：初始化时，注意容量空间大小
			 
			 
			 3、引用：只是引用空间的内容（引用空间长度由类型决定）(1、为什么指针需要类型？)
				
				
				PS:1、使用变量，必须先定义。
				
			
	4字符型：
		字符常量（字面）：
			'a'
			ASCII：计算机只能识别二进制语言，所以有特定二进制序列代表字符
				'a'---97   'b'---98  '0'----48
			转义字符：
					'\n'  换行   '\t' tab键    '\0'  ---ASCII为0   '\\'
					 
					 
					
		字符变量：char 1Byte
			定义字符变量：
				char 变量名;
			初始化：在定义变量的同时赋值	
				char a='a';
					
	数组：
		1、定义数组

		2、引用数组
		3、初始化数组
		
	指针变量：
		1、定义指针变量
		2、初始化
		3、引用
		
	结构体：
		1、定义结构体变量
		2、初始化
		3、引用
	

运算符：C语言为程序提供运算的符号
	1、求空间大小的运算符
		sizeof  类型/变量名
	
	
			
C++:面向对象（15天）	

	
		
常用单词：
	1、读read   写  write   执行execute 
	
	
	
	


目标：就业 （11 12 1 2 3 4 5 6 7 8）
	
要求：努力	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	