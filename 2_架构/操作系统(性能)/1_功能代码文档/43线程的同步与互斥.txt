并发：多个进程/线程同时执行
	1、进程并发
	2、线程并发



线程分离：因为线程退出时，会有线程的状态保留给的调用者线程。而分离的线程是当线程结束时，自动释放，不会保留。
	pthread_detach(tid)

获取线程的ID：
	pthread_self();

同步：线程或者进程间为了完成任务而规定的先后次序操作（协同完成）
	先生产  后消费
互斥：你执行我就不能执行（没有规定谁先执行，后执行，可以一占抢）

竞争：在计算机中竞争是经常发生。（资源的数量《使用者的数量）

	
污读：   
污写：
	PS:当多个使用者使用一块公共的空间时，可能会发生污读污写的现象。	
	解决方案：在读取时或者写入时，其他线程或者进程等待。

原子性：不可分开，要么一次性执行完成，要么不执行。

临界资源：某一时间只允许一个使用者访问，其他使用者等待访问。具备有原子性

临界代码区：计算机中的临界资源代码区（具有原子性）

实现同步或互斥的三种方案：
	1、锁（互斥量）
		
		pthread_mutex_init();//初始化锁
		pthread_mutex_lock()    上锁
		   注：若该锁已经被其他使用者上锁时，此使用者就等待锁被打开
		       (是一个阻塞等待函数)
		pthread_mutex_unlock()   解锁

	   PS:锁只有两种状态，关锁（等待）/开锁。
	2、条件变量
	3、信号量




练习题：
1、熟练今天知识点
2、完成练习：(循环锁)
	5个线程，轮流打印: 1 2 3 4 5 1 2 3 4 5 ....  

明天讲线程池：
	
	


