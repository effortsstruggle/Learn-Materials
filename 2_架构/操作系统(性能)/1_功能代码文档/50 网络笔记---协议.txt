进程间通信：存在于程间之间的通信
	1、管道
	2、信号
	3、共享内存
	4、消息队列
	5、socket（网络）
网络通信：不同地域之间的主机通信
	目标：资源共享
	
网络协议:双方约定的规则    
ISO国际标准协议
		发送方 							接收方
7		应用层	--------------------	应用层
6		表示层	--------------------	表示层
5		会话层	--------------------	会话层
4		传输层	--------------------	传输层		
3		网络层	--------------------	网络层		   ipv6	
2		链路层	--------------------	链路层		
1		物理层	--------------------	物理层  		
						
TCP/IP协议：成为了当今的英特网协议
	abc					应用层							应用层 		abc
	[1]abc				传输层							传输层		[1]abc
	[2][1]abc			网络层							网络层		[2][1]abc	
	[3][2][1]abc		数据链路层						数据链路层  [3][2][1]abc
				          
	上一层为下一层提供数据，下一层为上一层提供服务
MAC地址：标记网卡的唯一的ID

IP地址：标记此主机在网络上的位置
	ipv4:  4段点分十进制
			[].[].[].[]    
	IP地址： 网络号+主机号	
			网络号：此主机所在的网络位置
			主机号：此主机所在此网络下的某台主机
		广播地址 ：代表此网络下所有的主机  (创建的套接字默认点对点，不允许使用广播,不允许地址复用,除非通过setsockopt开启)
			192.168.1.255

		
		A  [网络号][[主][机][号]]
			[0...][[主][机][号]]
			0开头	
			
			1-127
		B   [[网][络号]][[主][机号]]
			[10]开头
			128.0-191.255
		C   [[网][络][号]][主机号]
			110开头 
			192.0.0 -223.255.255
			
		D组播：最高位必须是1110
			224

修改套接字属性：
	int setsockopt(int sockfd, int level, int optname,
                      const void *optval, socklen_t optlen);
			形参：
				套接字sockfd
				level:层次
					SOL_SOCKET
				optname:设置的选项
					SO_REUSEADDR   地址复用
					SO_BROADCAST   广播
				optval:
					
获取套接字属性：
	getsockopt()


端口号：程序的网络标识
	128以下被预留    80：HTTP   FTP:20/21    SSH:22  SMTP:25  ...
	

网络 字节序：网络统一规定的存储序列
	htons(short)   端口号用于转换为网络序地
	htonl(long)
	

传输控制层：
	UDP：面向无连接，不安全，不可靠的传输协议（效率很高）
	TCP：面向有连接，安全，可靠的传输协议（效率低）

网络编程模式：
C/S：Client/Server
Client客户端：发送请求方
server服务器：接收客户端的请求，并响应处理

UDP通信（数据报）：
	
服务器						客户端
1、创建套接字				1、创建套接字
	int socket();
2、绑定套接字（必须绑定）	2、绑定套接字（可以不绑定）
	bind
3、收发信息					3、收发信息
	sendto/send
	//阻塞函数
	recv/recvfrom	
	recv(int fd,void*buffer,int size,int type); 只接收内容
	recvfrom(int fd,void*buffer,int size,int type,struct sockaddr* addr,int*);//不仅接收内容，还保存发送方的地址

	
	
4、关闭						4、关闭
	close();
	
	
并行方案：
		1多进程：
		2多线程：
		
	
地址复用：	(若该端口进程正在运行，还是会绑定失败)
	
	
常用网络API:
		1、将字符串车换为网络字节序
			inet_addr("ip");
		2、将地址网络字节序转换为字符串
			inet_ntoa
		3、将网络端口的字节序转换为主机序
			ntohs
	
	struct sockaddr
	{
				sa_family_t sa_family; //int类型
               char        sa_data[14];	//	
	};
	struct sockaddr_in
	{
				sa_family_t sa_family; //int类型
				char sin_addr[6];
				char sin_port[4];
				char prot[4];
	};
		
	
应用层协议：用户双方约定的规则
	客户端					服务器
		1#1					关机
		1#2					获取进程列表
		
    飞秋：是一款局域网通信程序，基于UDP通信		
		1、给飞秋发送信息：  IP、端口号
		2、飞秋协议：
				聊天：
					1:100:用户名:主机名:32:聊天内容
					
			飞秋的通信大致过程：
				在线列表：存储局域中上线的用户的信息
					1、登录飞秋：向本局域网发送上线通知      6291457
						PS:一当飞秋收到上线通知时，存储信息到在线列表中
					2、退出飞秋：向本局域网发送上下线通知
						PS:一当飞秋收到上线通知时，从在线列表中干掉
					3、聊天系统：   288
						点聊：从在线列表中选择用户聊天
						
					4、		
wirleshark是一款抓包软件，抓取网卡中数据包
  如何来过滤：
		1、常用运算符：
					英文运算符		数学运算符
			相等	eq     			==
			大于    gt				>
			小于    lt				<
			
			and     且
			or      或者
	
	
1_lbt6_0#128#141877B3DA81#0#0#0#4001#9:1600439688:admin:DESKTOP-3D9OVMF:288:	
1_lbt6_0#128#E0ACCB8AB708#0#0#0#4001#9:1600444769:win8:APPLE:210:	
练习：
	1、熟练今天的内容
	2、多进程并发
	3、完成聊天室：
		客户端					服务器：
		  发送：你好----------》收到：你好
		  收到：你好《-----------发送：你好			

	4、设计协议：  解析字符串
		客户端					服务器：
		  1#1					  关机     system("halt");
		  1#2					  给客户端返回进程列表(子进程，管道，dup2)
		  1#3#进程名			  干掉此进程名的进程(killall)
	
1_lbt6_0#128#141877B3DA81#0#0#0#4001#9:1600439605:admin:DESKTOP-3D9OVMF:121:





周末任务：
	1、熟练今日知识点（1、控制系统  2飞秋聊天）
	2、完成项目：聊天系统











